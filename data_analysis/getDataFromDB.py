import sqlite3, sys
import csv

if len(sys.argv) < 2:
    print("Please provide a target database.\nUsage: python thisScript.py Database.db \nExiting...")
    sys.exit()

database_file = str(sys.argv[1])


# create a database connection to a SQLite database
def create_connection(db_file):
    conn = None
    try:
        conn = sqlite3.connect(db_file)
        print(sqlite3.version)
    except sqlite3.Error as e:
        print(e)
    finally:
        if conn:
            select_all_tasks(conn)
            conn.close()


def select_all_tasks(conn):
    # Query all rows in the tasks table
    #:param conn: the Connection object
    # tableList = ['CVE_Mitre', 'EXPLOIT_DB', 'NVD', 'RAPID7', 'SNYK_Entries']
    # dateColumns = ['Name', 'Date', 'DatePublished', 'DateCreated', 'DisclosureDate']
    yearList = [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
                2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]
    # monthList = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'] #NVD, RAPID7
    monthList = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']  # Snyk

    cur = conn.cursor()
    table = "Snyk"
    for year in yearList:
        for month in monthList:
            # value = str(year) + "-" + str(month) + "-%%" #NVD, EXPLOIT_DB
            # value = str(month) + "/%%/" + str(year) #RAPID7
            value = "%%%" + str(month) + ", " + str(year)  # snyk
            query = "SELECT Description FROM " + table \
                    + " WHERE DisclosureDate LIKE '" + value + "'"
            cur.execute(query)

            lines = cur.fetchall()
            with open("C://Git/executor/src/exporter/analysis/" + table + "/"
                      + str(year) + "." + str(month) + ".csv", 'w+', newline='', encoding="utf8") as f:
                data = f.read()
                f.seek(0)
                writer = csv.writer(f)
                for line in lines:
                    writer.writerow(list(line))
        print("Results written for year " + str(year))


if __name__ == '__main__':
    create_connection(database_file)

print("Finished.")
