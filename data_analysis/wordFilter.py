import os, sys

if len(sys.argv) < 2:
    print("Please provide a term to filter for.\nUsage: python searchQuery\nExiting...")
    sys.exit()

searchTerm = str(sys.argv[1])

print("Generating set ...")

yearList = [1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,
            2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019]
monthList = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12']  # EXPLOIT, NVD, RAPID7
tableList = ["EXPLOIT_DB", "NVD", "RAPID7", "Snyk"]
script_dir = os.path.dirname(__file__)

for table in tableList:
    print("Now analyzing table: " + table)
    if table == "Snyk":
        monthList = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']  # snyk
    words = [[], [], []]  # structure is: [ [Month.Year], [999, 998, ...], ["test", "test2", ...] ]
    for year in yearList:
        for month in monthList:
            valueAdded = False
            rel_path = table + "/" + str(year) + "." + str(month) + ".cleaned" + ".csv"
            file = os.path.join(script_dir, rel_path)
            reader = open(file, encoding='utf8').read().splitlines()
            counter = 1
            for line in reader:
                if line == "":  # this only happens with malformed line breaks
                    continue
                lineBeforeComma, lineAfterComma = line.lower().split(",", 1)
                if (lineAfterComma == searchTerm):
                    words[0].append(str(year) + "/" + str(month))
                    words[1].append(lineBeforeComma)
                    words[2].append(lineAfterComma)
                    valueAdded = True
            if valueAdded == False:  # for ease of use in Excel
                words[0].append(str(year) + "/" + str(month))
                words[1].append("0")
                words[2].append(searchTerm)

    with open('Searches/' + table + "/" + searchTerm + '.csv', 'w+', encoding="utf8") as f:
        data = f.read()
        f.seek(0)
        for i in range(len(words[0])):
            f.write(words[0][i] + "," + words[1][i] + "," + words[2][i] + "\n")

print("Finished.")
